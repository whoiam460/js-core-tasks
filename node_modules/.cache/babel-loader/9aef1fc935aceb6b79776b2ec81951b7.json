{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskNine.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskNine = props => {\n  _s();\n\n  const {\n    array\n  } = props;\n  const [showText, setShowText] = useState(null);\n\n  const selectItem = i => {\n    if (i === showText) {\n      return setShowText(false);\n    }\n\n    setShowText(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: array.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: `${showText === i ? \"block\" : \"none\"}`\n          },\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectItem(i),\n          children: \">showText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 40\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(TaskNine, \"UicmoQ+54X0zRqcPtVqk5mCbJf0=\");\n\n_c = TaskNine;\nexport default TaskNine;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskNine\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskNine.js"],"names":["useState","TaskNine","props","array","showText","setShowText","selectItem","i","map","item","display"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAK;AAACC,IAAAA;AAAD,MAASD,KAAd;AACD,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;AAEH,QAAMM,UAAU,GAAGC,CAAD,IAAM;AACpB,QAAIA,CAAC,KAAKH,QAAV,EAAmB;AACf,aAAOC,WAAW,CAAC,KAAD,CAAlB;AACH;;AACDA,IAAAA,WAAW,CAACE,CAAD,CAAX;AACH,GALD;;AAOI,sBACI;AAAA,cACCJ,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOF,CAAP,KAAY;AAAC,0BAAO;AAAA,gCAC7B;AAAM,UAAA,KAAK,EAAG;AAACG,YAAAA,OAAO,EAAG,GAAEN,QAAQ,KAAKG,CAAb,GAAiB,OAAjB,GAA2B,MAAO;AAA/C,WAAd;AAAA,oBAAkEE;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAD6B,eAGxB;AAAQ,UAAA,OAAO,EAAE,MAAMH,UAAU,CAACC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHwB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAMhB,KANP;AADD,mBADJ;AAWH,CAvBD;;GAAMN,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\n\n\n\n\nconst TaskNine = (props) => {\n\n    const{array}= props\n   const [showText, setShowText] = useState(null)\n\nconst selectItem =(i) =>{\n    if (i === showText){\n        return setShowText(false)\n    }\n    setShowText(i)\n}\n\n    return(\n        <>\n        {array.map((item, i)=> {return(<div>\n          <span style ={{display: `${showText === i ? \"block\" : \"none\"}`}}>{item}</span>  \n          \n               <button onClick={() => selectItem(i)}>>showText</button> \n          \n            \n        </div>)})}\n        </>\n    )\n}\n\n\nexport default TaskNine"]},"metadata":{},"sourceType":"module"}