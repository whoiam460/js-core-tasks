{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskNine.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskNine = props => {\n  _s();\n\n  const {\n    array\n  } = props;\n  const [showText, setShowText] = useState('none');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: array.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: `${showText}`\n          },\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), showText === 'none' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowText('block'),\n          children: \"showText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 38\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 40\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(TaskNine, \"q4LHq9AaNNC7YcGBZIfC//twylY=\");\n\n_c = TaskNine;\nexport default TaskNine;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskNine\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskNine.js"],"names":["useState","TaskNine","props","array","showText","setShowText","map","item","i","display"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAK;AAACC,IAAAA;AAAD,MAASD,KAAd;AACD,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,MAAD,CAAxC;AACC,sBACI;AAAA,cACCG,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAY;AAAC,0BAAO;AAAA,gCAC7B;AAAM,UAAA,KAAK,EAAG;AAACC,YAAAA,OAAO,EAAG,GAAEL,QAAS;AAAtB,WAAd;AAAA,oBAAyCG;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAD6B,EAGxBH,QAAQ,KAAK,MAAd,gBAAuB;AAAQ,UAAA,OAAO,EAAG,MAAMC,WAAW,CAAC,OAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvB,GAAyF,IAHhE;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAMhB,KANP;AADD,mBADJ;AAWH,CAfD;;GAAMJ,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\n\n\n\n\nconst TaskNine = (props) => {\n\n    const{array}= props\n   const [showText, setShowText] = useState('none')\n    return(\n        <>\n        {array.map((item, i)=> {return(<div>\n          <span style ={{display: `${showText}`}}>{item}</span>  \n          {\n              (showText === 'none')? <button onClick={ () => setShowText('block')}>showText</button> : null\n          }\n            \n        </div>)})}\n        </>\n    )\n}\n\n\nexport default TaskNine"]},"metadata":{},"sourceType":"module"}