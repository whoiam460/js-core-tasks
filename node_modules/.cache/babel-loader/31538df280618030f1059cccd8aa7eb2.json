{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskTvelve.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskTwelve = props => {\n  _s();\n\n  const {\n    countArticles,\n    limit\n  } = props;\n  let [value, chooseValue] = useState(false);\n\n  const toggle = i => {\n    if (value !== i) {\n      return chooseValue(i);\n    }\n  };\n\n  let countPage = Math.ceil(countArticles / limit);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: [' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), [...Array(countPage)].map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => toggle(i),\n            className: \"page-link\",\n            href: \"#\",\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TaskTwelve, \"SljCPmGcxTrM60WtlaeErusX1ak=\");\n\n_c = TaskTwelve;\nexport default TaskTwelve;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskTwelve\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskTvelve.js"],"names":["useState","TaskTwelve","props","countArticles","limit","value","chooseValue","toggle","i","countPage","Math","ceil","Array","map","item"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAOA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA2BF,KAAjC;AAEA,MAAI,CAACG,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,CAAC,KAAD,CAAnC;;AAEA,QAAMO,MAAM,GAAGC,CAAC,IAAI;AAClB,QAAIH,KAAK,KAAKG,CAAd,EAAiB;AACf,aAAOF,WAAW,CAACE,CAAD,CAAlB;AACD;AACF,GAJD;;AAMA,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUR,aAAa,GAAGC,KAA1B,CAAhB;AACA,sBACE;AAAA,2BACE;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,qBACG,GADH,eAEE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAyB,YAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQG,CAAC,GAAGQ,KAAK,CAACH,SAAD,CAAT,EAAsBI,GAAtB,CAA0B,CAACC,IAAD,EAAON,CAAP,kBACzB;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,iCACE;AAAG,YAAA,OAAO,EAAE,MAAMD,MAAM,CAACC,CAAD,CAAxB;AAA6B,YAAA,SAAS,EAAC,WAAvC;AAAmD,YAAA,IAAI,EAAC,GAAxD;AAAA,sBACGA,CAAC,GAAG;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,CARH,eAgBE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAyB,YAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4BD,CAxCD;;GAAMP,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\"\n\n\n\n  \n\n\nconst TaskTwelve = props => {\n  const { countArticles, limit } = props\n\n  let [value, chooseValue] = useState(false)\n\n  const toggle = i => {\n    if (value !== i) {\n      return chooseValue(i)\n    }\n  }\n\n  let countPage = Math.ceil(countArticles / limit)\n  return (\n    <>\n      <nav>\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            {' '}\n            <a className=\"page-link\" href=\"#\">\n              Previous\n            </a>\n          </li>\n\n          {[...Array(countPage)].map((item, i) => (\n            <li className=\"page-item\">\n              <a onClick={() => toggle(i)} className=\"page-link\" href=\"#\">\n                {i + 1}\n              </a>\n            </li>\n          ))}\n\n          <li className=\"page-item\">\n            <a className=\"page-link\" href=\"#\">\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\nexport default TaskTwelve\n"]},"metadata":{},"sourceType":"module"}