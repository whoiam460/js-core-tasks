{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskNine.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskNine = props => {\n  _s();\n\n  const {\n    array\n  } = props;\n  const [showText, setShowText] = useState(null);\n\n  const selectItem = i => {\n    if (i === showText) {\n      return setShowText(false);\n    }\n\n    setShowText(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: array.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: `${showText === i ? 'block' : 'none'}`\n          },\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            display: `${showText === i ? 'none' : 'block'}`\n          },\n          onClick: () => selectItem(i),\n          children: \"showText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(TaskNine, \"UicmoQ+54X0zRqcPtVqk5mCbJf0=\");\n\n_c = TaskNine;\nexport default TaskNine;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskNine\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskNine.js"],"names":["useState","TaskNine","props","array","showText","setShowText","selectItem","i","map","item","display"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMM,UAAU,GAAGC,CAAC,IAAI;AACtB,QAAIA,CAAC,KAAKH,QAAV,EAAoB;AAClB,aAAOC,WAAW,CAAC,KAAD,CAAlB;AACD;;AACDA,IAAAA,WAAW,CAACE,CAAD,CAAX;AACD,GALD;;AAOA,sBACE;AAAA,cACGJ,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOF,CAAP,KAAa;AACtB,0BACE;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAEG,YAAAA,OAAO,EAAG,GAAEN,QAAQ,KAAKG,CAAb,GAAiB,OAAjB,GAA2B,MAAO;AAAhD,WAAb;AAAA,oBACGE;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAG,GAAEN,QAAQ,KAAKG,CAAb,GAAiB,MAAjB,GAA0B,OAAQ;AAAhD,WADT;AAEE,UAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,CAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA;AADH,mBADF;AAmBD,CA9BD;;GAAMN,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react'\n\nconst TaskNine = props => {\n  const { array } = props\n  const [showText, setShowText] = useState(null)\n\n  const selectItem = i => {\n    if (i === showText) {\n      return setShowText(false)\n    }\n    setShowText(i)\n  }\n\n  return (\n    <>\n      {array.map((item, i) => {\n        return (\n          <div>\n            <span style={{ display: `${showText === i ? 'block' : 'none'}` }}>\n              {item}\n            </span>\n\n            <button\n              style={{ display: `${showText === i ? 'none' : 'block'}` }}\n              onClick={() => selectItem(i)}>\n              showText\n            </button>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nexport default TaskNine\n"]},"metadata":{},"sourceType":"module"}