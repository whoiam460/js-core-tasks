{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskTvelve.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskTvelve = props => {\n  _s();\n\n  const {\n    countArticles,\n    limit\n  } = props;\n  let countPage = Math.ceil(countArticles / limit);\n  let [value, setValue] = useState(false);\n\n  const toggle = i => {\n    if (value !== i) {\n      return setValue(i);\n    }\n  };\n\n  const renderElements = [...Array(countPage)].map((item, i) => {\n    i += 1;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"page-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"page-link\",\n        href: `#${value}`,\n        onClick: () => toggle(i),\n        style: {\n          color: value == i ? '#000' : '#d33'\n        },\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => setValue(value -= 1),\n      style: {\n        display: `${value == 1 ? 'none' : 'block '}`\n      },\n      className: \"page-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"page-link\",\n        href: \"#\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: renderElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => setValue(value += 1),\n      style: {\n        display: `${value == renderElements.length ? 'none' : 'block'}`\n      },\n      className: \"page-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"page-link\",\n        href: \"#\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskTvelve, \"HfkdrTZbv6ig6ZNY/1nxKCooDOU=\");\n\n_c = TaskTvelve;\nexport default TaskTvelve;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskTvelve\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskTvelve.js"],"names":["React","useState","TaskTvelve","props","countArticles","limit","countPage","Math","ceil","value","setValue","toggle","i","renderElements","Array","map","item","color","display","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA2BF,KAAjC;AACA,MAAIG,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,aAAa,GAAGC,KAA1B,CAAhB;AAEA,MAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMU,MAAM,GAAGC,CAAC,IAAI;AAClB,QAAIH,KAAK,KAAKG,CAAd,EAAiB;AACf,aAAOF,QAAQ,CAACE,CAAD,CAAf;AACD;AACF,GAJD;;AAMA,QAAMC,cAAc,GAAG,CAAC,GAAGC,KAAK,CAACR,SAAD,CAAT,EAAsBS,GAAtB,CAA0B,CAACC,IAAD,EAAOJ,CAAP,KAAa;AAC5DA,IAAAA,CAAC,IAAI,CAAL;AACA,wBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,IAAI,EAAG,IAAGH,KAAM,EAFlB;AAGE,QAAA,OAAO,EAAE,MAAME,MAAM,CAACC,CAAD,CAHvB;AAIE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAER,KAAK,IAAIG,CAAT,GAAa,MAAb,GAAsB;AAA/B,SAJT;AAAA,kBAKGA;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAbsB,CAAvB;AAeA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAAED,KAAK,IAAI,CAAX,CADzB;AAEE,MAAA,KAAK,EAAE;AAAES,QAAAA,OAAO,EAAG,GAAET,KAAK,IAAI,CAAT,GAAa,MAAb,GAAsB,QAAS;AAA7C,OAFT;AAGE,MAAA,SAAS,EAAC,WAHZ;AAAA,6BAIE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAyB,QAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BI;AAA5B;AAAA;AAAA;AAAA;AAAA,YATF,eAWE;AACE,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAAED,KAAK,IAAI,CAAX,CADzB;AAEE,MAAA,KAAK,EAAE;AACLS,QAAAA,OAAO,EAAG,GAAET,KAAK,IAAII,cAAc,CAACM,MAAxB,GAAiC,MAAjC,GAA0C,OAAQ;AADzD,OAFT;AAKE,MAAA,SAAS,EAAC,WALZ;AAAA,6BAME;AAAG,QAAA,SAAS,EAAC,WAAb;AAAyB,QAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAnDD;;GAAMjB,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst TaskTvelve = props => {\n  const { countArticles, limit } = props\n  let countPage = Math.ceil(countArticles / limit)\n\n  let [value, setValue] = useState(false)\n\n  const toggle = i => {\n    if (value !== i) {\n      return setValue(i)\n    }\n  }\n\n  const renderElements = [...Array(countPage)].map((item, i) => {\n    i += 1\n    return (\n      <li className=\"page-item\">\n        <a\n          className=\"page-link\"\n          href={`#${value}`}\n          onClick={() => toggle(i)}\n          style={{ color: value == i ? '#000' : '#d33' }}>\n          {i}\n        </a>\n      </li>\n    )\n  })\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <li\n        onClick={() => setValue((value -= 1))}\n        style={{ display: `${value == 1 ? 'none' : 'block '}` }}\n        className=\"page-item\">\n        <a className=\"page-link\" href=\"#\">\n          Previous\n        </a>\n      </li>\n      <ul className=\"pagination\">{renderElements}</ul>\n\n      <li\n        onClick={() => setValue((value += 1))}\n        style={{\n          display: `${value == renderElements.length ? 'none' : 'block'}`,\n        }}\n        className=\"page-item\">\n        <a className=\"page-link\" href=\"#\">\n          Next\n        </a>\n      </li>\n    </div>\n  )\n}\n\nexport default TaskTvelve\n"]},"metadata":{},"sourceType":"module"}