{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskTen.js\",\n    _s = $RefreshSig$();\n\nimport { ProgressBar } from 'react-bootstrap';\nimport { useState, usetate } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskTen = () => {\n  _s();\n\n  const [progres, setProgres] = useState(0);\n\n  const getValue = e => {\n    let a = e.target.value1;\n\n    if (a <= 100 && a >= 0) {\n      setProgres(a);\n    }\n\n    setProgres(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        style: {\n          width: '250px',\n          border: '1px solid black'\n        },\n        now: progres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '50px',\n          height: '20px',\n          marginLeft: '20px'\n        },\n        onChange: getValue,\n        value1: progres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setProgres(progres + 10),\n        children: \"Add 10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setProgres(progres - 10),\n        children: \"Minus 10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskTen, \"vIVBIyt8dpn9Rlq4pSuW+KIY/1I=\");\n\n_c = TaskTen;\nexport default TaskTen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskTen\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskTen.js"],"names":["ProgressBar","useState","usetate","TaskTen","progres","setProgres","getValue","e","a","target","value1","display","marginTop","width","border","height","marginLeft"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;;AACA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIC,CAAC,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAjB;;AACA,QAAMF,CAAC,IAAE,GAAJ,IAAaA,CAAC,IAAG,CAAtB,EAAyB;AACtBH,MAAAA,UAAU,CAACG,CAAD,CAAV;AACF;;AACFH,IAAAA,UAAU,CAAC,CAAD,CAAV;AACF,GAND;;AAQA,sBACE;AAAA,4BACA;AAAK,MAAA,KAAK,EAAG;AAACM,QAAAA,OAAO,EAAC,MAAT;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAb;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAGLC,UAAAA,MAAM,EAAE;AAHH,SADT;AAME,QAAA,GAAG,EAAEV;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAO,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAC,MAAP;AAAcE,UAAAA,MAAM,EAAC,MAArB;AAA6BC,UAAAA,UAAU,EAAC;AAAxC,SAAd;AAA+D,QAAA,QAAQ,EAAGV,QAA1E;AAAoF,QAAA,MAAM,EAAEF;AAA5F;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAYE;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAG,MAAMC,UAAU,CAACD,OAAO,GAAG,EAAX,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAG,MAAMC,UAAU,CAACD,OAAO,GAAG,EAAX,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAmBD,CA7BD;;GAAMD,O;;KAAAA,O;AA+BN,eAAeA,OAAf","sourcesContent":["import { ProgressBar } from 'react-bootstrap'\n\nimport { useState, usetate } from 'react'\n\nconst TaskTen = () => {\n  const [progres, setProgres] = useState(0)\n  const getValue = (e) => {\n      let a = e.target.value1\n      if ( (a<=100) && (a >=0)){\n         setProgres(a) \n      }\n     setProgres(0)\n  }\n\n  return (\n    <>\n    <div style= {{display:'flex',marginTop: '100px',}}>\n      <ProgressBar\n        style={{\n          width: '250px',\n          \n          border: '1px solid black',\n        }}\n        now={progres}\n      />\n      <input style={{width:'50px',height:'20px', marginLeft:'20px'}} onChange ={getValue} value1={progres} />\n      </div>\n      <div>\n          <button onClick ={() => setProgres(progres + 10)}>Add 10%</button>\n          <button onClick ={() => setProgres(progres - 10)}>Minus 10%</button>\n      </div>\n    </>\n  )\n}\n\nexport default TaskTen\n"]},"metadata":{},"sourceType":"module"}