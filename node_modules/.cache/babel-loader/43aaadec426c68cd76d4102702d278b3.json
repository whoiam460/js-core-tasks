{"ast":null,"code":"var _jsxFileName = \"/home/andry/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/tests/js-core-tasks/react/react-task-2/src/compponents/taskTwo.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskTwo = () => {\n  _s();\n\n  const [show, setShow] = useState('hidden');\n  console.log(show);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShow(show == 'visibile');\n      },\n      children: \"Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        visibility: {\n          show\n        }\n      },\n      children: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskTwo, \"fCFJA0fLBJY8Oeo7/9q4RTZCeeM=\");\n\n_c = TaskTwo;\nexport default TaskTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskTwo\");","map":{"version":3,"sources":["/home/andry/Стільниця/tests/js-core-tasks/react/react-task-2/src/compponents/taskTwo.js"],"names":["useState","TaskTwo","show","setShow","console","log","visibility"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAKA,MAAMC,OAAO,GAAE,MAAK;AAAA;;AAGhB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,QAAD,CAA/B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACI;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAG,MAAM;AAACC,QAAAA,OAAO,CAACD,IAAI,IAAI,UAAT,CAAP;AAA4B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAG,MAAA,KAAK,EAAI;AAACI,QAAAA,UAAU,EAAE;AAACJ,UAAAA;AAAD;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AASH,CAfD;;GAAMD,O;;KAAAA,O;AAgBN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\"\n\n\n\n\nconst TaskTwo =() =>{\n\n\n    const[show, setShow] = useState('hidden')\n    console.log(show);\n\n    return(\n        <>\n        <button onClick ={() => {setShow(show == 'visibile')}}>Show</button>\n\n\n        <p style = {{visibility: {show}}} >text</p>\n\n        </>\n    )\n}\nexport default TaskTwo"]},"metadata":{},"sourceType":"module"}